
/**
 * CalcLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

var _request = require("../Http/Client/RequestClient");
var _configuration = require("../configuration");
var _APIHelper = require("../APIHelper");
var _BaseController = require("./BaseController");
var _CouldNotComputeException = require("../Exceptions/CouldNotComputeException");

var SimpleCalculatorController = {
    /**
     * Calculates the expression using the specified operation.
     * All parameters to the endpoint are supplied through the object with their names
     * being the key and their desired values being the value. A list of parameters that can be used are:
     *     {OperationTypeEnum} operation    Required parameter: The operator to apply on the variables
     *     {double} x    Required parameter: The LHS value
     *     {double} y    Required parameter: The RHS value
     *     {function} callback    Required parameter: Callback function in the form of function(error, response)
     * @param {object} input    RequiredParameter: object containing any of the parameters to this API Endpoint.
     * @param {function} callback    Required parameter: Callback function in the form of function(error, response)
     *
     * @return {double}	Returns an instance of double type
     */
    getCalculate: function getCalculate(input, callback) {
        // Assign default values
        input = input || {};
        // prepare query string for API call;
        var _baseUri = _configuration.BASEURI;

        var _queryBuilder = _baseUri + "/{operation}";

        // Process template parameters
        _queryBuilder = _APIHelper.appendUrlWithTemplateParameters(_queryBuilder, {
            "operation": (input.operation !== null) ? input.operation : null
        });

        // Process query parameters
        _queryBuilder = _APIHelper.appendUrlWithQueryParameters(_queryBuilder, {
            "x": input.x,
            "y": input.y
        });

        // validate and preprocess url
        var _queryUrl = _APIHelper.cleanUrl(_queryBuilder);

        // Construct the request
        var _options = {
            queryUrl: _queryUrl,
            method: "GET"
        };

        // Build the response processing.
        var cb = function cb(_error, _response, _context) {
            var errorResponse;
            if (_error) {
                errorResponse = _BaseController.validateResponse(_context, "getCalculate");
                callback(errorResponse.error, errorResponse.response, errorResponse.context);
            } else if (_response.statusCode >= 200 && _response.statusCode <= 206) {
                var _strResult = _response.body;
                var _result = JSON.parse(_strResult);
                callback(null, _result, _context);
            } else if (_response.statusCode === 412) {
                callback({errorMessage: "Could not compute the requested calculation", errorCode: 412, errorResponse: new _CouldNotComputeException("Could not compute the requested calculation", _context)}, null, _context);
                return;
            } else {
                errorResponse = _BaseController.validateResponse(_context, "getCalculate");
                callback(errorResponse.error, errorResponse.response, errorResponse.context);
            }
        };

        _request(_options, cb);
    }

};

module.exports = SimpleCalculatorController;
